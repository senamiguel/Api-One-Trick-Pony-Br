// <auto-generated />
using System;
using Api_One_Trick_Pony_Br.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Api_One_Trick_Pony_Br.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20250216051524_PrimeiraMigracao")]
    partial class PrimeiraMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PonyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PonyId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Platform");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Pony", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Champion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IconId")
                        .HasColumnType("integer");

                    b.Property<int>("Karma")
                        .HasColumnType("integer");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Pony");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MediaId")
                        .HasColumnType("integer");

                    b.Property<int?>("PonyId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.HasIndex("PonyId");

                    b.ToTable("SocialMedia");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Comment", b =>
                {
                    b.HasOne("Api_One_Trick_Pony_Br.Models.Pony", null)
                        .WithMany("Comment")
                        .HasForeignKey("PonyId");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Pony", b =>
                {
                    b.HasOne("Api_One_Trick_Pony_Br.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.SocialMedia", b =>
                {
                    b.HasOne("Api_One_Trick_Pony_Br.Models.Platform", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api_One_Trick_Pony_Br.Models.Pony", null)
                        .WithMany("SocialMedias")
                        .HasForeignKey("PonyId");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Api_One_Trick_Pony_Br.Models.Pony", b =>
                {
                    b.Navigation("Comment");

                    b.Navigation("SocialMedias");
                });
#pragma warning restore 612, 618
        }
    }
}
